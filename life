<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>人生模拟器 - 真实AI版</title>
    <style>
        body {
            font-family: 'Microsoft YaHei', sans-serif;
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .api-config {
            background: #e8f5e9;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            border-left: 4px solid #4caf50;
        }
        .situation {
            background: #e3f2fd;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            line-height: 1.6;
        }
        .choices {
            display: flex;
            flex-direction: column;
            gap: 10px;
            margin: 20px 0;
        }
        button {
            padding: 12px;
            border: none;
            border-radius: 6px;
            background: #2196f3;
            color: white;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.3s;
        }
        button:hover {
            background: #1976d2;
        }
        .choice-btn {
            background: #4caf50;
        }
        .choice-btn:hover {
            background: #45a049;
        }
        .custom-btn {
            background: #ff9800;
        }
        .custom-btn:hover {
            background: #f57c00;
        }
        .biography {
            background: #fff3e0;
            padding: 25px;
            border-radius: 8px;
            margin: 20px 0;
            border-left: 4px solid #ff9800;
            line-height: 1.8;
            white-space: pre-wrap;
        }
        .analysis {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 8px;
            margin: 20px 0;
            line-height: 1.7;
            white-space: pre-wrap;
        }
        .loading {
            color: #666;
            font-style: italic;
            text-align: center;
            padding: 20px;
        }
        .hidden {
            display: none;
        }
        .input-section {
            background: #fff3cd;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        textarea, input, select {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-family: inherit;
            font-size: 14px;
            margin-bottom: 10px;
            box-sizing: border-box;
        }
        textarea {
            height: 120px;
            resize: vertical;
        }
        .tab-container {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 2px solid #eee;
        }
        .tab {
            padding: 12px 24px;
            cursor: pointer;
            border-bottom: 3px solid transparent;
        }
        .tab.active {
            border-bottom-color: #2196f3;
            color: #2196f3;
            font-weight: bold;
        }
        .choice-item {
            margin: 10px 0;
            padding: 12px;
            background: white;
            border-radius: 6px;
            border-left: 4px solid #2196f3;
        }
        .api-status {
            padding: 8px 12px;
            border-radius: 4px;
            margin: 10px 0;
            font-size: 14px;
        }
        .api-connected {
            background: #e8f5e9;
            color: #2e7d32;
            border: 1px solid #4caf50;
        }
        .api-disconnected {
            background: #ffebee;
            color: #c62828;
            border: 1px solid #f44336;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🎭 人生模拟器 - 真实AI版</h1>
        
        <div class="api-config">
            <h3>🔑 API 配置</h3>
            <input type="password" id="apiKeyInput" placeholder="sk-e9dc34fc06ea413c8c9a4ca8da43d0bc" style="width: 70%;">
            <button onclick="saveAPIKey()">💾 保存API Key</button>
            <div id="apiStatus" class="api-status api-disconnected">❌ 未连接AI服务</div>
            <small>获取API Key：<a href="https://platform.deepseek.com/" target="_blank">DeepSeek平台</a></small>
        </div>
        
        <div class="tab-container">
            <div class="tab active" onclick="switchTab('create')">👤 我的困境</div>
            <div class="tab" onclick="switchTab('choices')">🛣️ 人生选择</div>
            <div class="tab" onclick="switchTab('result')">📖 人生故事</div>
        </div>

        <!-- 个人信息标签页 -->
        <div id="createTab">
            <div class="input-section">
                <h3>👤 请详细描述你的情况</h3>
                <textarea id="userSituation" placeholder="请尽可能详细地描述：
• 你的年龄、职业、生活状态
• 具体面临的困境和矛盾
• 你的性格特点、价值观
• 你的担忧、期望和梦想
• 任何相关的背景信息

越详细，AI给出的建议越个性化！"></textarea>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin: 15px 0;">
                    <div>
                        <label>MBTI人格类型（可选）</label>
                        <select id="mbtiType">
                            <option value="">请选择...</option>
                            <option value="INTJ">INTJ - 建筑师</option>
                            <option value="INTP">INTP - 逻辑学家</option>
                            <option value="ENTJ">ENTJ - 指挥官</option>
                            <option value="ENTP">ENTP - 辩论家</option>
                            <option value="INFJ">INFJ - 提倡者</option>
                            <option value="INFP">INFP - 调停者</option>
                            <option value="ENFJ">ENFJ - 主人公</option>
                            <option value="ENFP">ENFP - 竞选者</option>
                            <option value="ISTJ">ISTJ - 物流师</option>
                            <option value="ISFJ">ISFJ - 守卫者</option>
                            <option value="ESTJ">ESTJ - 总经理</option>
                            <option value="ESFJ">ESFJ - 执政官</option>
                            <option value="ISTP">ISTP - 鉴赏家</option>
                            <option value="ISFP">ISFP - 探险家</option>
                            <option value="ESTP">ESTP - 企业家</option>
                            <option value="ESFP">ESFP - 表演者</option>
                        </select>
                    </div>
                    <div>
                        <label>星座（可选）</label>
                        <select id="zodiacSign">
                            <option value="">请选择...</option>
                            <option value="白羊座">白羊座 ♈</option>
                            <option value="金牛座">金牛座 ♉</option>
                            <option value="双子座">双子座 ♊</option>
                            <option value="巨蟹座">巨蟹座 ♋</option>
                            <option value="狮子座">狮子座 ♌</option>
                            <option value="处女座">处女座 ♍</option>
                            <option value="天秤座">天秤座 ♎</option>
                            <option value="天蝎座">天蝎座 ♏</option>
                            <option value="射手座">射手座 ♐</option>
                            <option value="摩羯座">摩羯座 ♑</option>
                            <option value="水瓶座">水瓶座 ♒</option>
                            <option value="双鱼座">双鱼座 ♓</option>
                        </select>
                    </div>
                </div>

                <button onclick="generateChoices()">🎯 AI分析我的困境并生成选择</button>
            </div>
        </div>

        <!-- 选择道路标签页 -->
        <div id="choicesTab" class="hidden">
            <div class="situation">
                <h3>你的困境：</h3>
                <div id="displaySituation"></div>
            </div>

            <div id="aiChoicesSection">
                <h3>🛣️ AI推荐的人生道路</h3>
                <div id="aiChoicesList"></div>
            </div>

            <div style="background: #e8f5e9; padding: 15px; border-radius: 8px; margin: 15px 0;">
                <h3>✏️ 自定义选择</h3>
                <p>如果AI推荐的选择都不符合你的想法：</p>
                <input type="text" id="customChoiceInput" placeholder="描述你自己想法的选择...">
                <button class="custom-btn" onclick="addCustomChoice()">➕ 添加自定义选择</button>
            </div>

            <div id="customChoicesList"></div>

            <button onclick="switchTab('create')">← 返回修改信息</button>
        </div>

        <!-- 结果标签页 -->
        <div id="resultTab" class="hidden">
            <div class="situation">
                <h3>你选择的道路：</h3>
                <div id="selectedChoice"></div>
            </div>

            <div id="resultContent" class="hidden">
                <div class="biography" id="biography"></div>
                <div class="analysis" id="analysis"></div>
            </div>

            <button onclick="switchTab('choices')">← 重新选择道路</button>
            <button onclick="newSimulation()">🔄 全新的人生模拟</button>
        </div>

        <div id="loading" class="loading hidden">
            <div>AI正在深度思考你的人生...</div>
            <div style="font-size: 14px; margin-top: 10px; color: #888;">
                🎭 分析个性特质 → 🛣️ 构思多元路径 → 📖 编织人生故事<br>
                ⏳ 正在调用真实AI生成个性化内容...
            </div>
        </div>
    </div>

    <script>
        // 状态管理
        let userProfile = {};
        let aiGeneratedChoices = [];
        let customChoices = [];
        let selectedChoice = '';
        let currentAPIKey = '';

        // 初始化
        function init() {
            // 尝试从本地存储加载API Key
            const savedKey = localStorage.getItem('deepseek_api_key');
            if (savedKey) {
                document.getElementById('apiKeyInput').value = savedKey;
                currentAPIKey = savedKey;
                updateAPIStatus(true);
            }
        }

        // 保存API Key
        function saveAPIKey() {
            const apiKey = document.getElementById('apiKeyInput').value.trim();
            if (!apiKey) {
                alert('请输入API Key');
                return;
            }
            currentAPIKey = apiKey;
            localStorage.setItem('deepseek_api_key', apiKey);
            updateAPIStatus(true);
            alert('API Key 已保存！');
        }

        // 更新API状态
        function updateAPIStatus(connected) {
            const statusElement = document.getElementById('apiStatus');
            if (connected) {
                statusElement.textContent = '✅ 已连接AI服务（使用真实AI）';
                statusElement.className = 'api-status api-connected';
            } else {
                statusElement.textContent = '❌ 未连接AI服务';
                statusElement.className = 'api-status api-disconnected';
            }
        }

        // 切换标签页
        function switchTab(tabName) {
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('[id$="Tab"]').forEach(tab => tab.classList.add('hidden'));
            
            const tabIndex = {'create': 1, 'choices': 2, 'result': 3}[tabName];
            document.querySelector(`.tab:nth-child(${tabIndex})`).classList.add('active');
            document.getElementById(tabName + 'Tab').classList.remove('hidden');
        }

        // 生成选择
        async function generateChoices() {
            if (!currentAPIKey) {
                alert('请先配置API Key！');
                return;
            }

            const situation = document.getElementById('userSituation').value.trim();
            const mbti = document.getElementById('mbtiType').value;
            const zodiac = document.getElementById('zodiacSign').value;
            
            if (!situation) {
                alert('请详细描述你的困境！');
                return;
            }

            userProfile = { situation, mbti, zodiac };
            document.getElementById('displaySituation').textContent = situation;
            
            document.getElementById('loading').classList.remove('hidden');
            switchTab('choices');

            try {
                aiGeneratedChoices = await generateAIChoicesWithAPI(userProfile);
                displayAIChoices(aiGeneratedChoices);
            } catch (error) {
                console.error('生成选择失败:', error);
                alert('生成选择失败：' + error.message);
            } finally {
                document.getElementById('loading').classList.add('hidden');
            }
        }

        // AI生成选择 - 使用真实API
        async function generateAIChoicesWithAPI(profile) {
            const personalityInfo = [];
            if (profile.mbti) personalityInfo.push(`MBTI类型：${profile.mbti}`);
            if (profile.zodiac) personalityInfo.push(`星座：${profile.zodiac}`);

            const response = await fetch('https://api.deepseek.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${currentAPIKey}`
                },
                body: JSON.stringify({
                    model: 'deepseek-chat',
                    messages: [
                        {
                            role: "system",
                            content: `你是一个资深的人生导师和创意思考者。请根据用户的详细情况，生成3-4个完全不同、有创意且实用的人生选择。

要求：
1. 每个选择都要充分考虑用户的个性、价值观和具体处境
2. 选择要多样化：包含保守、平衡、激进等不同风格
3. 每个选择都要有具体的行动方向和独特价值
4. 避免陈词滥调，给出真正有洞察力的建议
5. 用自然的中文描述，不要用编号

请用 || 分隔每个选择。`
                        },
                        {
                            role: "user",
                            content: `这是我的详细情况：
${profile.situation}

${personalityInfo.length > 0 ? '个性信息：' + personalityInfo.join('，') : ''}

请基于我的具体情况，给我一些人生道路的建议：`
                        }
                    ],
                    max_tokens: 800,
                    temperature: 0.9, // 更高的温度值让回答更多样化
                    frequency_penalty: 0.5 // 避免重复
                })
            });

            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`API请求失败: ${response.status} - ${errorText}`);
            }
            
            const data = await response.json();
            const content = data.choices[0].message.content;
            
            // 解析选择
            const choices = content.split('||')
                .filter(choice => choice.trim().length > 10) // 过滤掉太短的选择
                .map(choice => choice.trim())
                .slice(0, 4); // 最多4个选择
            
            if (choices.length < 2) {
                // 如果解析失败，尝试其他方式
                const lines = content.split('\n').filter(line => line.trim().length > 20);
                return lines.slice(0, 4);
            }
            
            return choices;
        }

        // 显示AI选择
        function displayAIChoices(choices) {
            const container = document.getElementById('aiChoicesList');
            container.innerHTML = '';
            
            if (choices.length === 0) {
                container.innerHTML = '<p>未能生成选择，请尝试重新描述你的困境</p>';
                return;
            }
            
            choices.forEach((choice, index) => {
                const choiceElement = document.createElement('div');
                choiceElement.className = 'choice-item';
                choiceElement.innerHTML = `
                    <button class="choice-btn" onclick="selectChoice('${choice.replace(/'/g, "\\'")}')">
                        🛣️ 选择 ${index + 1}: ${choice}
                    </button>
                `;
                container.appendChild(choiceElement);
            });
        }

        // 添加自定义选择
        function addCustomChoice() {
            const customChoice = document.getElementById('customChoiceInput').value.trim();
            if (!customChoice) {
                alert('请输入你的选择！');
                return;
            }

            customChoices.push(customChoice);
            
            const container = document.getElementById('customChoicesList');
            const choiceElement = document.createElement('div');
            choiceElement.className = 'choice-item';
            choiceElement.innerHTML = `
                <button class="custom-btn" onclick="selectChoice('${customChoice.replace(/'/g, "\\'")}')">
                    ✨ 我的自定义选择: ${customChoice}
                </button>
            `;
            container.appendChild(choiceElement);
            
            document.getElementById('customChoiceInput').value = '';
        }

        // 选择道路
        async function selectChoice(choice) {
            if (!currentAPIKey) {
                alert('请先配置API Key！');
                return;
            }

            selectedChoice = choice;
            document.getElementById('selectedChoice').textContent = choice;
            
            document.getElementById('loading').classList.remove('hidden');
            document.getElementById('resultContent').classList.add('hidden');
            switchTab('result');

            try {
                const [biography, analysis] = await generateBiographyAndAnalysisWithAPI(choice);
                displayResults(biography, analysis);
            } catch (error) {
                console.error('生成结果失败:', error);
                alert('生成人生故事失败：' + error.message);
            } finally {
                document.getElementById('loading').classList.add('hidden');
            }
        }

        // 生成传记和分析 - 使用真实API
        async function generateBiographyAndAnalysisWithAPI(choice) {
            const personalityInfo = [];
            if (userProfile.mbti) personalityInfo.push(`MBTI：${userProfile.mbti}`);
            if (userProfile.zodiac) personalityInfo.push(`星座：${userProfile.zodiac}`);

            const response = await fetch('https://api.deepseek.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${currentAPIKey}`
                },
                body: JSON.stringify({
                    model: 'deepseek-chat',
                    messages: [
                        {
                            role: "system",
                            content: `你是一个富有同理心的传记作家和人生策略师。请根据用户的详细情况和选择，创作一个生动真实的人生故事和深度分析。

请创作两个部分：

【人生传记】
用第一人称"我"的视角，写一个真实感人的短篇传记，描述选择这条道路后5-8年的人生历程。要求：
- 完全基于用户的性格、背景和选择
- 包含真实的情感起伏、挑战和成长
- 体现用户的个性特质
- 有具体的细节和转折点
- 语言生动，像在讲述真实人生故事

【深度分析】
从客观角度分析这条道路，要求：
- 具体会遇到的挑战和困难（不要用概率）
- 可能出现的意外情况和转机
- 需要特别注意的事项和陷阱
- 潜在的成长机会和收获
- 实用的建议和行动步骤

请用自然、人性化的语言，就像朋友间的深度对话。`
                        },
                        {
                            role: "user",
                            content: `我的详细情况：${userProfile.situation}
${personalityInfo.length > 0 ? '我的个性：' + personalityInfo.join('，') : ''}
我选择的道路：${choice}

请为我创作人生传记和深度分析：`
                        }
                    ],
                    max_tokens: 2000,
                    temperature: 0.85,
                    frequency_penalty: 0.3
                })
            });

            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`API请求失败: ${response.status} - ${errorText}`);
            }
            
            const data = await response.json();
            const content = data.choices[0].message.content;
            
            // 智能分割传记和分析
            let biography, analysis;
            
            if (content.includes('【人生传记】') && content.includes('【深度分析】')) {
                const parts = content.split('【深度分析】');
                biography = parts[0].replace('【人生传记】', '').trim();
                analysis = '【深度分析】' + parts[1];
            } else if (content.includes('人生传记') && content.includes('深度分析')) {
                const parts = content.split('深度分析');
                biography = parts[0].replace('人生传记', '').trim();
                analysis = '深度分析' + parts[1];
            } else {
                // 如果找不到明确分隔，平均分割
                const midPoint = Math.floor(content.length / 2);
                biography = content.substring(0, midPoint);
                analysis = content.substring(midPoint);
            }
            
            return [biography, analysis];
        }

        // 显示结果
        function displayResults(biography, analysis) {
            document.getElementById('biography').textContent = biography;
            document.getElementById('analysis').textContent = analysis;
            document.getElementById('resultContent').classList.remove('hidden');
        }

        // 新的模拟
        function newSimulation() {
            userProfile = {};
            aiGeneratedChoices = [];
            customChoices = [];
            selectedChoice = '';
            document.getElementById('userSituation').value = '';
            document.getElementById('mbtiType').value = '';
            document.getElementById('zodiacSign').value = '';
            document.getElementById('customChoicesList').innerHTML = '';
            document.getElementById('aiChoicesList').innerHTML = '';
            switchTab('create');
        }

        // 初始化
        document.addEventListener('DOMContentLoaded', init);
    </script>
</body>
</html>
